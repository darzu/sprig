Woodworking interactive tutorial:
    Principle of referencing, distance
    e.g. track saw is so direct
    simulate jitter when going through table saw to show how you must press into the guide
    tolerances and multiplicative effects
    Cutting dovetails
    Joinery principles
    solid wood vs plywood
    structural stress tests
    weight and cost

low-poly inspiration:
    https://store.steampowered.com/app/1203180/Breakwaters/

From games:
    Ghosts of Tsushima:
        Excellent use of photography for quest start/end
        Haiku minigame
        Great foliage and leaves
        You feel like a bad ass
    Spiderman:
        Fluid as hell movement
        Web is such a good movement gimick (which every open world game needs),
            this should probaby be stolen wholesale in more games
    God of War:
        Having a companion that's an important plot point makes a ton of sense
        Pretty, grandiose scale
    Horizon Zero:
        Great archery
        Takedowns are a puzzle
        Beautiful scenery
    Dark souls:
        Combat is slower pace and "simple"
        The game feels fair: it's your fault u died
        Enemy state machines are complex, sometimes they're easy, sometimes tough

Cool features sprigland could have:
  - Export 3D scene. Pause the game, take a snapshot of the whole game's 
    current geometry and export that as a .gltf file u can just load into
    blender.
  - Export to Unity. Export 3D scene to .gltf but also create a unity project
    with all the objects represented logically.
      - If we really wanted to, we could maybe transpile to C#. Yikes.
        We can do a partial transpile and anything we can't just gets dropped as
        a comment blob in C#-esq syntax.
        Could have a snarky comment like:
          {Look, we tried. It's not exactly right... You try writting a TypeScript->C# transpiler. Eh, maybe it's still useful?}

GPU toy tool:
  - has view that shows approx memory layout / usage on GPU
  - "shader templates" for e.g. tex->tex pixel shader like post processing, view embedding, jump flood algorithm, etc
      maybe this is how we do "mesh pool" shader stuff too?
  - prelude and postlude read-only collapsable text snippets w/ usable vars highlighted
  - it'd be nice if it was easy to output intermediate results to some debug texture
      and display that

Unrelated:
  social media check-in app:
    browser extension?
    specify {website, time allowed, interval (daily, weekly, monthly)}
    notifies you if you have check-ins available
    shows you your social page one after another with a timer at the top
    optionally a start button per-site so you know it's fully loaded
    an exception system, but it gets logged and you can see how much excess time you spent
    you get to save links to a reading list

Workshop game:
  You have a garage, 
    (that becomes a detached garage and then gets upgraded in size)
  With tools:
    woodworking,
    welding,
    smelting,
    smithing,
    pottery,
    sewing,
    glass blowing,
    stain glass,
    machining,
  Acquired over time
    Maybe you build your own tools?
  Maybe u sell at the local farmers market?
  Life sim?
    u start in a city,
    move out for more space,
    family?
  