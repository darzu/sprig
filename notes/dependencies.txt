So far, I've avoided using NPM and a bundler.
ES6 modules + raw .js files as ES6 modules + .d.ts files for types has worked just fine.

I plan to take a full dependency on:
    Typescript
    gl-matrix
    rapier

I'm getting rid of my dependency on babylonjs likely

Eventually, I'm going to need a bundler.
    Why?
        Save space via minification
        Combine multi-file modules/packages for easier consumption
            our Sprig module system should have bundled output

What is SystemJS?
    "SystemJS is a dynamic module loader that allows you to tie multiple 
    modules in multiple files instead of bundling them in one big file."

What is HTTP/2 ?
    https://en.wikipedia.org/wiki/HTTP/2
    "because HTTP/2 is coming now multiple HTTP requests are actually better"

"New generation of build tools"
    https://css-tricks.com/comparing-the-new-generation-of-build-tools/

"unbundled development"
    https://www.snowpack.dev/concepts/how-snowpack-works#unbundled-development

Snowpack / skypack:
    "the Snowpack development server bundles each dependency from node_modules 
    into one JavaScript file per dependency, converts those files to a native 
    JavaScript module, then serves it to the browser."

    Typescript decls?
    https://docs.skypack.dev/skypack-cdn/api-reference/lookup-urls#typescript-declarations

SWC:
    Rust TS compiler and transpiler (a la babel) (and bundler?)
    https://swc.rs