'cus cool kids spell math with an "s".

General exponentials?
    https://www.youtube.com/watch?v=O85OWBJ2ayo

Lerp, unlerp, remap:
    https://twitter.com/LimnuApp/status/733743111109640192
    https://limnu.com/sketch-lerp-unlerp-remap/

Complex numbers and conformal mapping
    https://wordsandbuttons.online/complex_numbers_and_conformal_mapping.html

Bilinear up/down sampling:
    https://bartwronski.com/2021/02/15/bilinear-down-upsampling-pixel-grids-and-that-half-pixel-offset/

Discrete Differential Geometry:
    Exterior Algebra:
        https://www.youtube.com/watch?v=paEKgbiCyPk&list=PL9_jI1bdZmz0hIrNCMQW1YmZysAiIYSSS&index=6

Lots of great old math papers:
    https://twitter.com/gabrielpeyre

Annotated equations:
    https://agilescientific.com/blog/2021/1/14/illuminated-equations

"Lyapunov function":
    https://twitter.com/ahmedallibhoy/status/1347600886986469381

Elliptic Curve Cryptography :
    https://www.allaboutcircuits.com/technical-articles/elliptic-curve-cryptography-in-embedded-systems/

Graph experiment / viz:
    https://www.desmos.com/calculator
    3d?
      https://www.geogebra.org/3d?lang=en

Interval algebra:
    https://www.ics.uci.edu/~alspaugh/cls/shr/allen.html

Dot product: a nice way to measure similarity of vectors

Homogeneous coordinates:
    https://www.youtube.com/watch?v=o1n02xKP138

Bezier curves:
  https://www.youtube.com/watch?v=aVwxzDHniEw
    can use nested lerps to calculate (De Casteljau's)
    also: Bernstein Polynomial Form
    need approx solutions for even distance along curve
  https://www.redblobgames.com/articles/curved-paths/

LookAt matrix:
  https://carmencincotti.com/2022-04-25/cameras-theory-webgpu/
    https://medium.com/@carmencincotti/lets-look-at-magic-lookat-matrices-c77e53ebdf78
    https://dev.to/carmencincotti/lets-look-at-magic-lookat-matrices-1c7o
  https://www.euclideanspace.com/maths/algebra/vectors/lookat/index.htm
  https://learnopengl.com/Getting-started/Camera
  first, translate the camera to 0,0,0
  then it's a rotation to the coordinate system from the point of view of the camera:
    direction away from camera,
    direction up from camera,
    direction right of camera,
  process for orthonormalizing a set of vectors:
    e.g. camera dir + world up into camera forward, right, and up
    https://en.wikipedia.org/wiki/Gramâ€“Schmidt_process


http://immersivemath.com/ila/index.html

WebGPU "normalized device coordinate" NDC:
  Y-up, (-1,-1,0):(1,1,1), left-hand
  Y-axis is up in normalized device coordinate (NDC): point(-1.0, -1.0) in NDC is located at the bottom-left corner of NDC. In addition, x and y in NDC should be between -1.0 and 1.0 inclusive, while z in NDC should be between 0.0 and 1.0 inclusive. Vertices out of this range in NDC will not introduce any errors, but they will be clipped.

WebGL "normalized device coordinates" NDC:
  Y-up, (-1,-1,-1):(1,1,1), left-hand
  t is a cube two units on each side, with one corner at (-1,-1,-1) and the opposite corner at (1,1,1). The center of the cube is the point (0,0,0). This 8 cubic meter coordinate system used by clip space is known as normalized device coordinates (NDC)

det(mat3x3 m) = dot(m.col[0], cross(m.col[1], m.col[2]))

SVD: "singular value decomposition"
  https://en.wikipedia.org/wiki/Singular_value_decomposition
  decompose any matrix into Rotation->Scale->Rotation
